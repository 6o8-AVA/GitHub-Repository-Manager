{
  "name": "github-repository-manager",
  "publisher": "Henrique Bruno",
  "author": {
    "name": "Henrique Bruno",
    "email": "henrique.bruno.fa@gmail.com"
  },
  "icon": "https://raw.githubusercontent.com/SrBrahma/GitHub-Repository-Manager/master/src/img/logo128.png",
  "displayName": "GitHub Repository Manager",
  "description": "Easily and quickly clone public and private repositories",
  "version": "0.1.0",
  "main": "./out/extension.js",
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "start": "yarn watch",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./"
  },
  "keywords": [
    "github",
    "repository",
    "manager",
    "clone",
    "cloner",
    "auth",
    "token",
    "oauth"
  ],
  "dependencies": {
    "@octokit/auth-oauth-app": "^3.0.2",
    "@octokit/core": "^2.5.0",
    "@octokit/oauth-app": "^1.1.0",
    "@octokit/rest": "^17.6.0",
    "@types/mz": "^2.7.0",
    "@types/rimraf": "^3.0.0",
    "express": "^4.17.1",
    "mz": "^2.7.0",
    "rimraf": "^3.0.2"
  },
  "devDependencies": {
    "@types/express": "^4.17.6",
    "@types/node": "^13.11.0",
    "@types/vscode": "^1.44.0",
    "@typescript-eslint/eslint-plugin": "^2.26.0",
    "@typescript-eslint/parser": "^2.26.0",
    "dotenv": "^8.2.0",
    "eslint": "^6.8.0",
    "prettier": "^2.0.5",
    "typescript": "^3.8.3"
  },
  "engines": {
    "vscode": "^1.44.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "license": "MIT",
  "contributes": {
    "configuration": {
      "title": "GitHub Repository Manager",
      "properties": {
        "githubRepositoryManager.saveToken": {
          "type": "boolean",
          "default": true,
          "description": "Saves the token (OAuth or Personal access token) in an internal file. You must be careful while using this option, as malicious applications and extensions could retrieve the stored token and read and write to your repositories. Remember you can delete your Personal access token under GitHub > Settings > Developer settings > Personal access token and your OAuth under GitHub > Settings > Applications > Authorized OAuth Apps"
        },
        "githubRepositoryManager.clonedRepositoriesSearch.searchOnDefaultCloneDirectory": {
          "type": "boolean",
          "default": true,
          "description": "Search for cloned repos on the 'git.defaultCloneDirectory' path setting. Only applies if 'git.defaultCloneDirectory' is setted."
        },
        "githubRepositoryManager.clonedRepositoriesSearch.defaultCloneDirectoryMaximumDepth": {
          "minimum": 1,
          "default": 3,
          "type": "integer",
          "description": "How deep on 'git.defaultCloneDirectory' o searching for cloned repositories. A depth of 3 means it can find a repository until 'defaultCloneDir/1/2/repository'. Note that upon finding a .git directory, it will stop searching on any further on that directory."
        },
        "githubRepositoryManager.clonedRepositoriesSearch.directoriesToSkip": {
          "type": "array",
          "default": [
            "node_modules",
            ".vscode"
          ],
          "description": "Saves the token (OAuth or Personal access token) in an internal file. You must be careful while using this option, as malicious applications and extensions could retrieve the stored token and read and write to your repositories. Remember you can delete your Personal access token under GitHub Settings > Developer settings > Personal access token, and your OAuth under GitHub Settings > Applications > Authorized OAuth Apps"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "githubRepoMgr",
          "title": "GitHub Repository Loader",
          "icon": "src/img/logo.svg"
        }
      ]
    },
    "views": {
      "githubRepoMgr": [
        {
          "id": "githubRepoMgr.views.account",
          "name": "Account"
        },
        {
          "id": "githubRepoMgr.views.repositories",
          "name": "Repositories"
        }
      ]
    },
    "commands": [
      {
        "title": "Create Repository",
        "command": "githubRepoMgr.commands.repos.createRepo",
        "icon": "$(repo-create)"
      },
      {
        "title": "Reload Repositories",
        "command": "githubRepoMgr.commands.repos.reload",
        "icon": "$(refresh)"
      },
      {
        "command": "githubRepoMgr.commands.repos.openWebPage",
        "title": "Open GitHub Page"
      },
      {
        "command": "githubRepoMgr.commands.clonedRepos.open",
        "title": "Open"
      },
      {
        "command": "githubRepoMgr.commands.clonedRepos.openInNewWindow",
        "title": "Open in New Window"
      },
      {
        "command": "githubRepoMgr.commands.clonedRepos.addToWorkspace",
        "title": "Add to Workspace"
      },
      {
        "command": "githubRepoMgr.commands.clonedRepos.openContainingFolder",
        "title": "Open Containing Folder"
      },
      {
        "command": "githubRepoMgr.commands.clonedRepos.copyPath",
        "title": "Copy Path"
      },
      {
        "command": "githubRepoMgr.commands.notClonedRepos.cloneTo",
        "title": "Clone to"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "githubRepoMgr.commands.repos.createRepo",
          "when": "view == githubRepoMgr.views.repositories",
          "group": "navigation"
        },
        {
          "command": "githubRepoMgr.commands.repos.reload",
          "when": "view == githubRepoMgr.views.repositories",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "githubRepoMgr.commands.repos.openWebPage",
          "when": "viewItem == githubRepoMgr.context.clonedRepo",
          "group": "9@0"
        },
        {
          "command": "githubRepoMgr.commands.clonedRepos.open",
          "when": "viewItem == githubRepoMgr.context.clonedRepo",
          "group": "0@0"
        },
        {
          "command": "githubRepoMgr.commands.clonedRepos.openInNewWindow",
          "when": "viewItem == githubRepoMgr.context.clonedRepo",
          "group": "0@1"
        },
        {
          "command": "githubRepoMgr.commands.clonedRepos.addToWorkspace",
          "when": "viewItem == githubRepoMgr.context.clonedRepo",
          "group": "0@2"
        },
        {
          "command": "githubRepoMgr.commands.clonedRepos.openContainingFolder",
          "when": "viewItem == githubRepoMgr.context.clonedRepo",
          "group": "1@0"
        },
        {
          "command": "githubRepoMgr.commands.clonedRepos.copyPath",
          "when": "viewItem == githubRepoMgr.context.clonedRepo",
          "group": "1@1"
        },
        {
          "command": "githubRepoMgr.commands.notClonedRepos.cloneTo",
          "when": "viewItem == githubRepoMgr.context.notClonedRepo"
        },
        {
          "command": "githubRepoMgr.commands.repos.openWebPage",
          "when": "viewItem == githubRepoMgr.context.notClonedRepo"
        }
      ]
    }
  }
}
